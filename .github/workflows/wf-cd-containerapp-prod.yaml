name: wf-cd-containerapp-prod

env:
  DOCKERHUB_ID: 'armck'
  CONFIGURATION: 'containerapp'
  ENVIRONMENT: 'prod'
  APP_DOCKERFILE: 'app/Dockerfile'
  APP_IMAGE_TAG: 'app-latest'

on:
  push:
    branches: [ master ]

defaults:
  run:
    shell: bash

jobs:
  setup-env:
    runs-on: ubuntu-24.04
    outputs:
        dockerhub_id: ${{ steps.env.outputs.dockerhub_id }}
        configuration: ${{ steps.env.outputs.configuration }}
        environment: ${{ steps.env.outputs.environment }}
        app_dockerfile: ${{ steps.env.outputs.app_dockerfile }}
        app_image_tag: ${{ steps.env.outputs.app_image_tag }}
    steps:
      - name: Setup environment variables
        id: env
        run: |
          echo "dockerhub_id=$DOCKERHUB_ID" >> "$GITHUB_OUTPUT"
          echo "configuration=$CONFIGURATION" >> "$GITHUB_OUTPUT"
          echo "environment=$ENVIRONMENT" >> "$GITHUB_OUTPUT"
          echo "app_dockerfile=$APP_DOCKERFILE" >> "$GITHUB_OUTPUT"
          echo "app_image_tag=$APP_IMAGE_TAG" >> "$GITHUB_OUTPUT"

  dev-container-build-and-push:
    needs: setup-env
    uses: armckinney/cicd/.github/workflows/rwf-container-build-and-push.yaml@main
    with:
      dockerhub_id: ${{ needs.setup-env.outputs.dockerhub_id }}
    secrets:
      DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

  app-container-build-and-push:
    needs: setup-env
    uses: armckinney/cicd/.github/workflows/rwf-container-build-and-push.yaml@main
    with:
      dockerhub_id: ${{ needs.setup-env.outputs.dockerhub_id }}
      dockerfile: ${{ needs.setup-env.outputs.app_dockerfile }}
      image_name: ${{ github.event.repository.name }}
      image_tag: ${{ needs.setup-env.outputs.app_image_tag }}
    secrets:
      DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

  terraform-deployment-ci:
    needs: [setup-env, dev-container-build-and-push, app-container-build-and-push, static-analysis]
    uses: armckinney/cicd/.github/workflows/rwf-terraform-deployment-ci.yaml@main
    with:
      # using standard container image for deployment as opposed to devcontainer
      container_image: armck/terraform-azure:2.73.0
      configuration: ${{ needs.setup-env.outputs.configuration }}
      environment: ${{ needs.setup-env.outputs.environment }}
    secrets:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
